image: node:16

definitions: 
  steps: 
    - step: &deploy
        clone:
          enabled: false
        script:
          # sync your files to S3
          - pipe: atlassian/aws-s3-deploy:1.1.0
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              S3_BUCKET: $S3_BUCKET
              LOCAL_PATH: 'build'
          # triggering a distribution invalidation to refresh the CDN caches
          - pipe: atlassian/aws-cloudfront-invalidate:0.6.0
            variables:
              AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
              AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
              AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
              DISTRIBUTION_ID: $DISTRIBUTION_ID

pipelines:
  branches:
    master:
      - step:
          name: Build and Test
          caches:
            - node
          script:
            - npm install
            - npm run build
          artifacts:
            - build/**
      - step:
          name: Security Scan
          script:
            # Run a security scan for sensitive data.
            - pipe: atlassian/git-secrets-scan:0.5.1
      - step: 
          <<: *deploy
          name: Deploy to production
          trigger: manual
          deployment: Production
    
    develop:
      - step:
          name: Build and Test
          caches:
            - node
          script:
            - npm install
            - npm run develop
            - npm test -- --watchAll=false
          artifacts:
            - build/**
      - step:
          name: Security Scan
          script:
            # Run a security scan for sensitive data.
            - pipe: atlassian/git-secrets-scan:0.5.1
      - step: 
           <<: *deploy
           name: Deploy to develop
           trigger: automatic
           deployment: Development
